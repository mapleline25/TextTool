<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:control="clr-namespace:TextTool.Wpf.Library.Controls"
                    xmlns:converter="clr-namespace:TextTool.Wpf.Library.Converters">
    
    <!-- GridViewColumnHeaderArrow Style -->
    <Geometry x:Key="GridViewColumnHeader.UpArrow">M 0 4 L 3.5 0 L 7 4 Z</Geometry>
    <Geometry x:Key="GridViewColumnHeader.DownArrow">M 0 0 L 3.5 4 L 7 0 Z</Geometry>
    <Style x:Key="GridViewColumnHeaderArrow" TargetType="{x:Type Path}">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Fill" Value="{StaticResource GridViewColumnHeaderArrow.Fill}"/>
    </Style>

    <!-- GridViewColumnHeaderGripper Style -->
    <Style x:Key="GridViewColumnHeaderGripper" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Margin" Value="0,0,-8,0"/>
        <Setter Property="Width" Value="17"/>
        <Setter Property="Background" Value="{StaticResource GridViewColumnHeaderGripper.Background}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}"
                            Background="Transparent"
                            SnapsToDevicePixels="True">
                        <Rectangle HorizontalAlignment="Center"
                                   Width="1"
                                   Fill="{TemplateBinding Background}"
                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- GridViewColumnHeader Style -->
    <Style TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Background" Value="{StaticResource GridViewColumnHeader.Background}"/>
        <Setter Property="Padding" Value="5,4"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                    <Grid SnapsToDevicePixels="True">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <Path x:Name="ArrowPath"
                                  Style="{StaticResource GridViewColumnHeaderArrow}"/>
                        </Border>
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        <Thumb x:Name="PART_HeaderGripper"
                               Style="{StaticResource GridViewColumnHeaderGripper}"
                               SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="control:ListViewService.SortDirection" Value="{x:Null}">
                            <Setter Property="Visibility" TargetName="ArrowPath" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="control:ListViewService.SortDirection" Value="Ascending">
                            <Setter Property="Data" TargetName="ArrowPath" Value="{StaticResource GridViewColumnHeader.UpArrow}"/>
                            <Setter Property="Visibility" TargetName="ArrowPath" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="control:ListViewService.SortDirection" Value="Descending">
                            <Setter Property="Data" TargetName="ArrowPath" Value="{StaticResource GridViewColumnHeader.DownArrow}"/>
                            <Setter Property="Visibility" TargetName="ArrowPath" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="Role" Value="Padding">
                            <Setter Property="IsEnabled" Value="False"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{StaticResource GridViewColumnHeader.MouseOver.Background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource GridViewColumnHeader.MouseOver.Border}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" Value="{StaticResource GridViewColumnHeader.Pressed.Background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource GridViewColumnHeader.Pressed.Border}"/>
            </Trigger>
            <Trigger Property="Role" Value="Floating">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- ListViewItem Style -->
    <Style x:Key="ListViewItemStyle" TargetType="{x:Type ListViewItem}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Padding" Value="0,3,0,3"/>
        <Setter Property="Margin" Value="0,0,-3,-1"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Grid SnapsToDevicePixels="True" UseLayoutRounding="True">
                        <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <GridViewRowPresenter Margin="{TemplateBinding Margin}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True"/>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}}" Value="{x:Null}"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Background" Value="{StaticResource ListViewItem.MouseOver.Background}"/>
                <Setter Property="BorderBrush" Value="transparent"/>
            </MultiDataTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                    <Condition Property="IsSelected" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{StaticResource ListViewItem.Selected.Inactive.Background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ListViewItem.Selected.Inactive.Border}"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Selector.IsSelectionActive" Value="True"/>
                    <Condition Property="IsFocused" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush" Value="{StaticResource ListViewItem.Selected.Active.Border}"/>
            </MultiTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding (Selector.IsSelectionActive), RelativeSource={RelativeSource Self}}" Value="False"/>
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True"/>
                    <Condition Binding="{Binding (control:ListViewService.ContextMenuIsOpen), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Background" Value="{StaticResource ListViewItem.Selected.Active.Background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ListViewItem.Selected.Active.Border}"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsActive, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Value="True"/>
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Background" Value="{StaticResource ListViewItem.Selected.Active.Background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ListViewItem.Selected.Active.Border}"/>
            </MultiDataTrigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>